// Firebase Storage Rules for FoodDB Images
// These rules allow public read access to images and authenticated write access

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow public read access to all images
    match /{allPaths=**} {
      allow read: if true;
    }
    
    // Recipe images - allow public read, authenticated write
    match /recipes/{category}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null || 
                     // Allow writes from your API server (you can add API key validation here)
                     request.headers.get('x-api-key') != null;
      allow delete: if request.auth != null;
    }
    
    // Generated AI images - allow public read, server write
    match /generated/{type}/{fileName} {
      allow read: if true;
      allow write: if request.headers.get('x-api-key') != null || 
                     // Allow from your server's IP or with proper API key
                     true; // For now, allow all writes to generated images
      allow delete: if request.auth != null;
    }
    
    // Meal images organized by meal ID
    match /meals/{mealId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null || 
                     request.headers.get('x-api-key') != null;
      allow delete: if request.auth != null;
    }
    
    // Category and ingredient images
    match /categories/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }
    
    match /ingredients/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }
    
    // Temporary uploads (auto-delete after 24 hours)
    match /temp/{fileName} {
      allow read, write: if true;
      allow delete: if true;
    }
  }
}
